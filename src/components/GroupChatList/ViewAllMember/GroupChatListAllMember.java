/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package components.GroupChatList.ViewAllMember;

import Interface.User;
import com.google.gson.Gson;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.MouseAdapter;
import java.net.HttpURLConnection;
import java.net.URI;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import java.net.http.*;
import java.util.List;
import javax.swing.SwingWorker;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import project.DataBase;

/**
 *
 * @author lnt09
 */
public class GroupChatListAllMember extends javax.swing.JPanel {

    /**
     * Creates new form GroupChatListAllMember
     */
    private String groupName;
    private String id;

    public GroupChatListAllMember(String id, String name) {
        this.id = id;
        initComponents();

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        groupChatListAllMemberTable.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        groupNameText.setText(name);

        new CallAPIGroupChatAllMember().execute();
    }

    private class CallAPIGroupChatAllMember extends SwingWorker<String, User[]> {

        @Override
        protected String doInBackground() {
            try {
//                String api = "http://13.215.176.178:8881/admin/group-chat-member/" + id;
                String api = DataBase.serverUrl + "/admin/group-chat-member/" + id;

                System.out.println("API all member: " + api);

                HttpClient client = HttpClient.newHttpClient();

                HttpRequest req = HttpRequest.newBuilder()
                        .uri(new URI(api))
                        .GET()
                        .build();

                HttpResponse<String> res = client.send(req, HttpResponse.BodyHandlers.ofString());

                int resCode = res.statusCode();
                String json = res.body();
                if (resCode == HttpURLConnection.HTTP_OK) {
                    System.out.println("Call API Thanh cong");

                    JSONParser par = new JSONParser();
                    JSONObject data = (JSONObject) par.parse(json);
                    JSONArray list = (JSONArray) data.get("members");
                    String json1 = list.toString();

                    Gson gson = new Gson();
                    User[] users = gson.fromJson(json1, User[].class);

                    publish(users);
                    System.out.println("Users: " + json1);

                    return "Done";
                } else {
                    return "Failed";
                }
            } catch (Throwable e) {
                e.printStackTrace();
            }
            return "Failed";
        }

        @Override
        protected void process(List<User[]> chunks) {
            User[] data = chunks.get(chunks.size() - 1);
            groupChatListAllMemberTable.clearData();
            for (User user : data) {
                groupChatListAllMemberTable.addUserRow(user);
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        previousPageGroupChat = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        groupChatListAllMemberTable = new components.GroupChatList.ViewAllMember.GroupChatListAllMemberTable();
        jLabel2 = new javax.swing.JLabel();
        groupNameText = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        previousPageGroupChat.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        previousPageGroupChat.setForeground(new java.awt.Color(127, 127, 127));
        previousPageGroupChat.setText("Group Chat");
        previousPageGroupChat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(127, 127, 127));
        jLabel1.setText("/ Member List of");

        jScrollPane1.setBorder(null);

        groupChatListAllMemberTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "User Name", "Full Name", "Address", "Date of Birth", "Sex", "Email", "Last Login", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(groupChatListAllMemberTable);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(127, 127, 127));

        groupNameText.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        groupNameText.setForeground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(previousPageGroupChat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(groupNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(319, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(previousPageGroupChat)
                        .addComponent(jLabel1))
                    .addComponent(groupNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
    }// </editor-fold>//GEN-END:initComponents

    protected void paintComponent(Graphics grphcs) {
        Graphics2D g2 = (Graphics2D) grphcs;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2.setColor(getBackground());
        g2.fillRoundRect(0, 0, getWidth(), getHeight(), 15, 15);
        super.paintComponent(grphcs);
    }

    public void addListenerPreviousPageGroupChat(MouseAdapter e) {
        previousPageGroupChat.addMouseListener(e);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private components.GroupChatList.ViewAllMember.GroupChatListAllMemberTable groupChatListAllMemberTable;
    private javax.swing.JLabel groupNameText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel previousPageGroupChat;
    // End of variables declaration//GEN-END:variables
}
